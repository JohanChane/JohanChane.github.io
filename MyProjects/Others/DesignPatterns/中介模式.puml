@startuml

abstract class Colleague {
    - mediator : Mediator
    + getState() {abstract}
    + action() {abstract}
}

class ConcreteColleague1 {
    + getState()
    + action()
}

class ConcreteColleague2 {
    + getState()
    + action()
}

interface Mediator {
    + mediate(colleague : Colleague)
}

class ConcreteMediator {
    - concreteColleague1 : ConcreteColleague1
    - concreteColleague2 : ConcreteColleague2
    + mediate(colleague : Colleague)
}

ConcreteColleague1 --|> Colleague
ConcreteColleague2 --|> Colleague
ConcreteMediator ..|> Mediator
Mediator "-mediator" --o Colleague
ConcreteColleague1 "-concreteColleague1" --o ConcreteMediator
ConcreteColleague2 "-concreteColleague2" --o ConcreteMediator

note left of ConcreteMediator::"mediate(colleague : Colleague)"
    if (colleague.getState()) {
        // ...
        concreteColleague1.action()
        OR
        concreteColleague2.action();
    }
end note

note left of ConcreteColleague1::"action()"
    // ...
    // 会向 medator 传递自身
    mediator.mediate(this);
end note

@enduml
