@startuml

interface State {
    + handle() : void
}

class ConcreteStateA {
    + handle() : void
}

class ConcreteStateB {
    + handle() : void
}

class Context {
    - state
    + request() : void
    + getState() : State
    + setState(state : State) : void
    + changeState() : void
}

ConcreteStateA ..|> State
ConcreteStateB ..|> State

State "-state" --o Context

note left of Context::"request()"
    state.handle()
end note

note right of Context::"changeState()"
    // 某些原因引起状态改变，使得 `request()` 调用相应的 `state.handle()`
    switch(value) {
        case 1:
            setState(new ConcreteStateA());
            break;
        case 2:
            setState(new ConcreteStateB());
            break;
        // ...
    }
end note

@enduml
